using BarbarianSim.Enums;
using BarbarianSim.Events;

namespace BarbarianSim.Paragon;

public class Exploit : IHandlesEvent<DamageEvent>
{
    // When an enemy is damaged by you, they become Vulnerable for 3 seconds. This cannot happen more than once every 20 seconds per enemy.
    public const double VULNERABLE_DURATION = 3;
    public const double EFFECT_COOLDOWN = 20;

    public Exploit(SimLogger log) => _log = log;

    private readonly SimLogger _log;

    public void ProcessEvent(DamageEvent e, SimulationState state)
    {
        if (!state.Config.HasParagonNode(ParagonNode.Exploit))
        {
            return;
        }

        var lastProcEvent = state.ProcessedEvents.OfType<ExploitProcEvent>().FirstOrDefault(x => x.Target == e.Target);

        if (lastProcEvent != null)
        {
            _log.Verbose($"Last Exploit proc was at Timestamp {lastProcEvent.Timestamp} for Enemy #{e.Target.Id}");
        }

        if (lastProcEvent == null || e.Timestamp - lastProcEvent.Timestamp >= EFFECT_COOLDOWN)
        {
            state.Events.Add(new ExploitProcEvent(e.Timestamp, e.Target));
            _log.Verbose($"Exploit created ExploitProcEvent for Enemy #{e.Target.Id}");
        }
    }
}
